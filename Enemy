class Solution
{
    public:
        int largestArea(int n,int m,int k,vector<vector<int>> &enemy)
        { vector<int> row;

            vector<int> col;

            

            row.push_back(0);

            col.push_back(0);

            

            for ( int i = 0; i <k; i++ ){

                

                row.push_back(enemy[i][0]);

                col.push_back(enemy[i][1]);

                

            }

            

            row.push_back(n+1);

            col.push_back(m+1);

            

            sort(row.begin(), row.end());

            sort(col.begin(), col.end());

        

            int len = row.size();

            int prow = row[0];

            int length = 0;

            

            for ( int i = 1; i<len; i++ ){

                

                length = max(length, row[i]-prow-1);  

                prow = row[i];

                

            }

            

            int pcol = 0;

            int breath = 0;

            

            for ( int i = 1; i<len; i++ ){

                

                breath = max(breath, col[i]-pcol-1);  

                pcol = col[i];

                

            }

            

            int area = length*breath;

            return area;
            //  Thanks to Bhalerao-2002
        }
};
